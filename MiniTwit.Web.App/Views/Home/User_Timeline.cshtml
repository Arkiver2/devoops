@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@using Microsoft.AspNetCore.Identity
@model Message
@{
    ViewData["Title"] = ViewData["ViewedUserName"] + "'s Timeline";
    var messages = ViewData["Messages"] as IEnumerable<Message>;
    var thereIsNextPage = (bool) ViewData["ThereIsNextPage"];
    var thereIsPreviousPage = (bool) ViewData["ThereIsPreviousPage"];
    var newestDate = ViewData["NewestDate"] as DateTime?;
    var oldestDate = ViewData["OldestDate"] as DateTime?;
}

<h2>@ViewData["Title"]</h2>
<div class="followstatus">
    @if (User?.Identity?.Name != null && User.Identity.Name != (string) ViewData["ViewedUserName"])
    {
        @if (ViewData["IsFollowingUser"] != null && (bool) ViewData["IsFollowingUser"])
        {
            <span>You are already following this user. <a asp-controller="Home" asp-action="Unfollow" asp-route-followeeId="@ViewData["ViewedUserId"]" asp-route-viewedUserName="@ViewData["ViewedUserName"]" >Unfollow this user.</a></span>
        }
        else
        {
            <span>You are not yet following this user. <a asp-controller="Home" asp-action="Follow" asp-route-followeeId="@ViewData["ViewedUserId"]" asp-route-viewedUserName="@ViewData["ViewedUserName"]" >Follow this user.</a></span>
        }
    }
</div>
@await Html.PartialAsync("_Messages", messages)
@if (thereIsPreviousPage)
{
    <a asp-controller="Home" asp-action="User_Timeline" asp-route-dateOlderThan="@newestDate">Previous Page</a>
}
@if (thereIsNextPage)
{
    <a asp-controller="Home" asp-action="User_Timeline" asp-route-dateNewerThan="@oldestDate">Next Page</a>
}